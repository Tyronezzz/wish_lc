class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> result;
        vector<int> combine;
        
        sort(candidates.begin(), candidates.end());
        backtrack(candidates, combine, target, 0, result);
        
        return result;
    }
    
    
    void backtrack(vector<int> &candidates, vector<int>&combine, int target, int curindex, vector<vector<int>> &result)
    {
        if(target==0)
        {
            result.push_back(combine);
            return;
        }
        
        for(int i=curindex;target>=candidates[i]&& i<candidates.size();i++)
        {
            combine.push_back(candidates[i]);
            backtrack(candidates, combine, target - candidates[i], i, result);
            combine.pop_back();
        }
        
    }
};
